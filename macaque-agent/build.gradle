import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group = 'six.eared.macaque'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly files("${System.getProperty('java.home')}/../lib/tools.jar")
    api project(':macaque-mbean')
    api project(':macaque-common')
    api 'org.ow2.asm:asm:9.3'
    api 'org.ow2.asm:asm-tree:9.3'
    api 'org.projectlombok:lombok:1.18.24'
    api 'io.github.hhy50:reflect-linker:1.1.0'
    api('com.taobao.arthas:arthas-vmtool:4.0.3') {
        exclude group: 'com.taobao.arthas', module: 'arthas-common'
    }
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation files("${System.getProperty('java.home')}/../lib/tools.jar")
    testImplementation 'junit:junit:4.13.1'
    testImplementation project(':library:macaque-mybatis')
    testImplementation 'org.mybatis:mybatis:3.5.8'
    testImplementation project(':library:macaque-spring')
}

test {
    useJUnit()
}

shadowJar {
    exclude 'six/eared/macaque/preload/**'
    dependencies {
        exclude(dependency('io.github.hhy50:reflect-linker'))
        exclude(dependency('org.ow2.asm:asm'))
    }

    def libs = allLibrary()
    libs.collect { File libDir ->
        def modName = ":library:${libDir.name}"
        dependsOn "${modName}:jar"
        from("${project(modName).buildDir}/classes/java/main/") {
            into '/'
        }
        from("${project(modName).buildDir}/resources/main") {
            into '/'
        }
    }

    archiveBaseName = 'agent'
    archiveVersion = ''
    archiveClassifier = null
}

task preloadJar(type: ShadowJar) {
    configurations = [project.configurations.runtimeClasspath]
    from(sourceSets.main.output) {
        include 'six/eared/macaque/preload/**'
    }
    dependencies {
        include(dependency('io.github.hhy50:reflect-linker'))
        include(dependency('org.ow2.asm:asm'))
    }
    archiveBaseName = "preload"
}

task release(type: Jar, dependsOn: [shadowJar, preloadJar]) {
    from("${project.buildDir}/libs/agent.jar") {
        into('lib/')
    }
    from("${project.buildDir}/libs/preload.jar") {
        into('lib/')
    }
    from('build/classes/java/main/six/eared/macaque/agent/loader/') {
        into('six/eared/macaque/agent/loader')
    }

    archiveBaseName = "$project.name"
    archiveVersion = ''
    archiveClassifier = null
    manifest {
        attributes(
                'Agent-Class': 'six.eared.macaque.agent.loader.AgentMain',
                'Can-Redefine-Classes': 'true',
                'Can-Retransform-Classes': 'true',
                'Manifest-Version': "${projectVersion}"
        )
    }

    doLast {
        delete file("${project.buildDir}/libs/agent.jar")
        delete file("${project.buildDir}/libs/preload.jar")
    }
}

task lightwidhtJar(type: Jar, dependsOn: compileJava) {
    from('build/classes/java/main/six/eared/macaque/agent/LightweightAgent.class') {
        into('six/eared/macaque/agent/')
    }

    archiveBaseName = "$project.name"
    archiveVersion = "lightweight"
    archiveClassifier = null
    manifest {
        attributes(
                'Agent-Class': 'six.eared.macaque.agent.LightweightAgent',
                'Can-Redefine-Classes': 'true',
                'Can-Retransform-Classes': 'true',
                'Manifest-Version': "${projectVersion}"
        )
    }
}

File[] allLibrary() {
    def modulesDir = new File(project.parent.projectDir, 'library')
    return modulesDir.listFiles({
        it.isDirectory() && it.name != 'macaque-library'
    } as FileFilter)
}